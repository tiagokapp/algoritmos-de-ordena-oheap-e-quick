#include<stdio.h>

	int labirinto_correto[10][10]={0,0,0,0,1,1,1,1,1,1
					      ,1,1,1,0,1,1,1,1,1,1
					      ,1,1,0,0,1,1,1,1,1,1
					      ,1,1,0,1,1,1,1,1,1,1
					      ,1,1,0,0,1,1,0,0,0,1
					      ,1,1,1,0,1,1,0,1,0,1
					      ,1,0,0,0,1,0,0,1,0,1
					      ,1,0,1,1,1,0,1,1,0,1
					      ,1,0,0,0,0,0,1,1,0,0
					      ,1,1,1,1,1,1,1,1,1,0};








	int passos (int h, int v,int direcao)
	{	
       //  for (h=0;h<=10;h++){
         //	for (v=0;v<=10;v++){
         		
         	//	printf("escreva o valor labirinto_correto[%d][%d]");
         		//scanf("%d",&labirinto[h][v]);
         		
			 
		 		
		if(h==9 && v==9)  {
			printf("\nChegou ao final do labirinto!\n\n\n\n");
		}	
		
		else if (labirinto_correto[h+1][v]==0 && direcao!=3) 	  {
					printf("Saiu da posicao: [%d][%d] e andou pra baixo na posicao: [%i][%i]\n posicao correta",h,v,h+1,v);
					passos(h+1,v,1);
					
			}
			
		//	else if (labirinto[h+1][v]==1 && direcao!=3){
				//	printf("Caminho sem solucao: [%d][%d]\n\n",h,v);
					

		//	}
		else if (labirinto_correto[h][v+1]==0 && direcao!=4) {
					printf("Saiu da posicao: [%d][%d] e andou pra direita na posicao: [%i][%i]\n",h,v,h,v+1); 
					passos(h,v+1,2);
			}
				
	//	else if (labirinto[h][v+1]==1 && direcao!=4){
	//	printf("Caminho sem solucao: [%d][%d]\n\n",h,v); 
									//	andou(h,v+1,2);

		//	}
				
		else if(labirinto_correto[h-1][v]==0 && direcao!=1)  {
					printf("Saiu da posicao: [%d][%d] e andou pra cima na posicao: [%i][%i]\n",h,v,h-1,v);
					passos(h-1,v,3);
			}
			
			
	//	else if(labirinto[h-1][v]==1 && direcao!=1){
	//	printf("Caminho sem solucao: [%d][%d]\n\n",h,v);
					//andou(h-1,v,3);
		//	}
			
		else if(labirinto_correto[h][v-1]==0 && direcao!=2)  { 
					printf("Saiu da posicao: [%d][%d] e andou pra esquerda na posicao: [%i][%i]\n",h,v,h,v-1);
					passos(h,v-1,4);
			}
			
			
			//	else if(labirinto[h][v-1]==1 && direcao!=2){
				//	printf("Caminho sem solucao: [%d][%d]\n\n",h,v);
						//	andou(h,v-1,4);

		//	}

//Esta opÃ§Ã£o mostra um caminho sem saÃ­da na substituiÃ§Ã£o do 0 pelo 1
//como no exemplo: "Caminho sem solucao[1][3]"

			
	
//}


//}
         	
		 }
		 
		 
int labirinto_errado	   [10][10]={0,0,0,0,1,1,1,1,1,1
					      	            ,1,1,1,0,1,1,1,1,1,1
					                	,1,1,0,0,1,1,1,1,1,1
					                    ,1,1,0,1,1,1,1,1,1,1
					                    ,1,1,0,0,1,1,0,0,0,1
					                    ,1,1,1,0,1,1,0,1,0,1
					                    ,1,0,1,1,1,0,0,1,0,1
					                    ,1,0,1,1,1,0,1,1,0,1
					                    ,1,0,0,0,0,0,1,1,0,0
					                    ,1,1,1,1,1,1,1,1,1,0};

 
		 
		 
		 
		 
		 
		 
int passos2 (int h, int v,int direcao)
	{	
        // for (h=0;h<=10;h++){
         //	for (v=0;v<=10;v++){
         		
         	//	printf("escreva o valor labirinto_errado[%d][%d]");
         	//	scanf("%d",&labirinto_errado[h][v]);
         		
			 
		 		
		if(h==9 && v==9)  {
			printf("\nChegou ao final do labirinto!\n\n\n\n");
		}	
		
		else if (labirinto_errado[h+1][v]==0 && direcao!=3) 	  {
					printf("Saiu da posicao: [%d][%d] e andou pra baixo na posicao: [%i][%i]\n posicao correta",h,v,h+1,v);
					passos2(h+1,v,1);
					
			}
			
	
		else if (labirinto_errado[h][v+1]==0 && direcao!=4) {
					printf("Saiu da posicao: [%d][%d] e andou pra direita na posicao: [%i][%i]\n",h,v,h,v+1); 
					passos2(h,v+1,2);
			}
				

				
		else if(labirinto_errado[h-1][v]==0 && direcao!=1)  {
					printf("Saiu da posicao: [%d][%d] e andou pra cima na posicao: [%i][%i]\n",h,v,h-1,v);
					passos2(h-1,v,3);
			}
			

			
		else if(labirinto_errado[h][v-1]==0 && direcao!=2)  { 
					printf("Saiu da posicao: [%d][%d] e andou pra esquerda na posicao: [%i][%i]\n",h,v,h,v-1);
					passos2(h,v-1,4);
			}
			
			
		

//Esta opção mostra um caminho sem saÃ­da na substituiÃ§Ã£o do 0 pelo 1
//como no exemplo: "Caminho sem solucao[1][3]"

		 
		 		else if (labirinto_errado[h+1][v]==1 && direcao!=3){
					printf("\n\nCaminho sem solucao: [%d][%d]\n\n",h,v);
					
	}
		 
		 
		 		else if (labirinto_errado[h][v+1]==1 && direcao!=4){
		printf("\n\nCaminho sem solucao: [%d][%d]\n\n",h,v); 
										passos2(h,v+1,2);

			}
			
						
		else if(labirinto_errado[h-1][v]==1 && direcao!=1){
		printf("\n\nCaminho sem solucao: [%d][%d]\n\n",h,v);
					passos2(h-1,v,3);
			}
			
		
				else if(labirinto_errado[h][v-1]==1 && direcao!=2){
					printf("\n\n Caminho sem solucao: [%d][%d]\n\n",h,v);
							passos2(h,v-1,4);

			}
		
		
}

int  main() 

{	
	int passos (int h, int v,int direcao);

	int passos2 (int h, int v, int direcao);

	int h,v,direcao;
	int laberrado;

	h=0;v=0;direcao=0;
	
	
		printf("Ande  pelo labirinto abaixo como no exemplo para chegar até o final ");
		printf("\n\n[10][10]=\n\n{0,0,0,0,1,1,1,1,1,1\n,1,1,1,0,1,1,1,1,1,1\n,1,1,0,0,1,1,1,1,1,1\n,1,1,0,1,1,1,1,1,1,1\n,1,1,0,0,1,1,0,0,0,1\n,1,1,1,0,1,1,0,1,0,1\n,1,0,0,0,1,0,0,1,0,1\n,1,0,1,1,1,0,1,1,0,1\n\,1,0,0,0,0,0,1,1,0,0\n,1,1,1,1,1,1,1,1,1,0}\n \n\n\n");
					      
				      
	printf("\n\npassos do labirinto correto\n\n\n\n");
		if (labirinto_correto[h][v]==0){
	
		passos (0,0,0); 
		
		 
}


	printf("\n\n\npasssos do labirinto errado\n\n\n");





if (labirinto_errado[h][v] ==0){
	
	
	passos2(0,0,0);
}
	
		printf("\n\n\n modelo labirinto correto \n\n\n\n");							      
		
		for (h=0;h<10;h++){
			for(v=0;v<10;v++){
				
				printf("[%d]", labirinto_correto[h][v]);
		}	
	printf("\n");
}
	
	
laberrado = labirinto_errado [10][10];

printf("\n\n\n\n\n");
printf("\n\n\n modelo labirinto errado \n\n\n ");
//printf("****************************************");
		
			
		for (h=0;h<10;h++){
			for(v=0;v<10;v++){
				
				printf("[%d]", labirinto_errado[h][v]);
		}	
	printf("\n");
}
	//	printf("int labirinto_errado \n\n\n	   [10][10]={0,0,0,0,1,1,1,1,1,1\n,1,1,1,0,1,1,1,1,1,1\n,1,1,0,0,1,1,1,1,1,1\n  ,1,1,0,1,1,1,1,1,1,1\n ,1,1,0,0,1,1,0,0,0,1\n ,1,1,1,0,1,1,0,1,0,1\n ,1,0,1,0,1,0,0,1,0,1\n ,1,0,1,1,1,0,1,1,0,1\n ,1,0,0,0,0,0,1,1,0,0\n ,1,1,1,1,1,1,1,1,1,0}");
					                  
					                   
//	printf("\n\n o labirinto errado colocou um valor irregula(1), ma matriz[6][3] \npara dar o valor errado");				                   
					                   
					                   
			
		
}
